{
  "uid" : "4a0055c4d19e63c0",
  "name" : "calls the 'migrate' function and sends given value to the proxy",
  "fullName" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2.calls the 'migrate' function and sends given value to the proxy",
  "historyId" : "87ebd2d9b1bc7f835c57f118f4a3d133",
  "time" : {
    "start" : 1639713322679,
    "stop" : 1639713338978,
    "duration" : 16299
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "expected '1000000000000000000000' to equal '1000000000000000100000'",
  "statusTrace" : "AssertionError: expected '1000000000000000000000' to equal '1000000000000000100000'\n                    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:224:47)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "suite",
    "value" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2"
  }, {
    "name" : "testClass",
    "value" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2"
  }, {
    "name" : "testMethod",
    "value" : "calls the 'migrate' function and sends given value to the proxy"
  }, {
    "name" : "package",
    "value" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 8,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "6a88b0c82252852b",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/84//#testresult/6a88b0c82252852b",
        "status" : "failed",
        "statusDetails" : "expected '1000000000000000000000' to equal '1000000000000000100000'",
        "time" : {
          "start" : 1639704390531,
          "stop" : 1639704407395,
          "duration" : 16864
        }
      }, {
        "uid" : "31fc0a6502f20896",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/78//#testresult/31fc0a6502f20896",
        "status" : "failed",
        "statusDetails" : "expected '1000000000000000000000' to equal '1000000000000000100000'",
        "time" : {
          "start" : 1639540774751,
          "stop" : 1639540798110,
          "duration" : 23359
        }
      }, {
        "uid" : "f9698551aa1ba9c1",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/68//#testresult/f9698551aa1ba9c1",
        "status" : "failed",
        "statusDetails" : "expected '100000000000000000000' to equal '100000000000000100000'",
        "time" : {
          "start" : 1639409099687,
          "stop" : 1639409123609,
          "duration" : 23922
        }
      }, {
        "uid" : "853d538a39c1b773",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/64//#testresult/853d538a39c1b773",
        "status" : "failed",
        "statusDetails" : "expected '100000000000000000000' to equal '100000000000000100000'",
        "time" : {
          "start" : 1639394164447,
          "stop" : 1639394191357,
          "duration" : 26910
        }
      }, {
        "uid" : "a06608d2e7f71721",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/61//#testresult/a06608d2e7f71721",
        "status" : "failed",
        "statusDetails" : "expected '100000000000000000000' to equal '100000000000000100000'",
        "time" : {
          "start" : 1639392437049,
          "stop" : 1639392460845,
          "duration" : 23796
        }
      }, {
        "uid" : "8eda187b9d429247",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/63//#testresult/8eda187b9d429247",
        "status" : "failed",
        "statusDetails" : "expected '100000000000000000000' to equal '100000000000000100000'",
        "time" : {
          "start" : 1639392376423,
          "stop" : 1639392398335,
          "duration" : 21912
        }
      }, {
        "uid" : "2cfb3eb79efb592b",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/53//#testresult/2cfb3eb79efb592b",
        "status" : "failed",
        "statusDetails" : "expected '10000000000000000000000' to equal '10000000000000000100000'",
        "time" : {
          "start" : 1639103350518,
          "stop" : 1639103374789,
          "duration" : 24271
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4a0055c4d19e63c0.json",
  "parameterValues" : [ ]
}
{
  "uid" : "6ea779ea987e2dff",
  "name" : "initializer has run",
  "fullName" : "Contract: Initializable basic testing without inheritance after initialize.initializer has run",
  "historyId" : "3e7ef451d5982861a94c7dea4ca6cced",
  "time" : {
    "start" : 1638928938425,
    "stop" : 1638928945776,
    "duration" : 7351
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: Initializable basic testing without inheritance after initialize"
  }, {
    "name" : "testClass",
    "value" : "Contract: Initializable basic testing without inheritance after initialize"
  }, {
    "name" : "testMethod",
    "value" : "initializer has run"
  }, {
    "name" : "package",
    "value" : "Contract: Initializable basic testing without inheritance after initialize"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 3,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "6cac29cd86bedf45",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/43//#testresult/6cac29cd86bedf45",
        "status" : "passed",
        "time" : {
          "start" : 1637926998921,
          "stop" : 1637927007931,
          "duration" : 9010
        }
      }, {
        "uid" : "ed21ccc636a3c8de",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/42//#testresult/ed21ccc636a3c8de",
        "status" : "passed",
        "time" : {
          "start" : 1637915322324,
          "stop" : 1637915328678,
          "duration" : 6354
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "6ea779ea987e2dff.json",
  "parameterValues" : [ ]
}
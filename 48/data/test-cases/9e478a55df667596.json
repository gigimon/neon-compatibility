{
  "uid" : "9e478a55df667596",
  "name" : "calls the 'migrate' function and sends given value to the proxy",
  "fullName" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading to V3.calls the 'migrate' function and sends given value to the proxy",
  "historyId" : "14ef7de730564efa97e205e9b4cba6bb",
  "time" : {
    "start" : 1638928761710,
    "stop" : 1638928782920,
    "duration" : 21210
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusMessage" : "expected '100000000000000000000' to equal '100000000000000100000'",
  "statusTrace" : "AssertionError: expected '100000000000000000000' to equal '100000000000000100000'\n                    at Context.<anonymous> (test/proxy/transparent/TransparentUpgradeableProxy.behaviour.js:253:49)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading to V3"
  }, {
    "name" : "testClass",
    "value" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading to V3"
  }, {
    "name" : "testMethod",
    "value" : "calls the 'migrate' function and sends given value to the proxy"
  }, {
    "name" : "package",
    "value" : "Contract: TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading to V3"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "e91bb47bb484411f",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/43//#testresult/e91bb47bb484411f",
        "status" : "failed",
        "statusDetails" : "expected '0' to equal '100000'",
        "time" : {
          "start" : 1637927556560,
          "stop" : 1637927595719,
          "duration" : 39159
        }
      }, {
        "uid" : "bffcc22c4faef9cf",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/42//#testresult/bffcc22c4faef9cf",
        "status" : "failed",
        "statusDetails" : "expected '0' to equal '100000'",
        "time" : {
          "start" : 1637915881120,
          "stop" : 1637915910849,
          "duration" : 29729
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9e478a55df667596.json",
  "parameterValues" : [ ]
}
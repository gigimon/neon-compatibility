{
  "uid" : "48ebb24d173348e3",
  "name" : "transfers the requested amount",
  "fullName" : "Contract: ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address when the spender has enough approved balance when the token owner has enough balance.transfers the requested amount",
  "historyId" : "810752dbdb5bf53499b984e23e56f63d",
  "time" : {
    "start" : 1639401000432,
    "stop" : 1639401142743,
    "duration" : 142311
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "Returned error: request to https://proxy.teststand2.neontest.xyz/solana failed, reason: connect ETIMEDOUT 157.90.236.85:443",
  "statusTrace" : "Error: Returned error: request to https://proxy.teststand2.neontest.xyz/solana failed, reason: connect ETIMEDOUT 157.90.236.85:443\n                    at Context.<anonymous> (test/token/ERC20/ERC20.behavior.js:56:39)\n                    at runMicrotasks (<anonymous>)\n                    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Contract: ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address when the spender has enough approved balance when the token owner has enough balance"
  }, {
    "name" : "testClass",
    "value" : "Contract: ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address when the spender has enough approved balance when the token owner has enough balance"
  }, {
    "name" : "testMethod",
    "value" : "transfers the requested amount"
  }, {
    "name" : "package",
    "value" : "Contract: ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address when the spender has enough approved balance when the token owner has enough balance"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "3f3ee437d29c70f2",
        "reportUrl" : "https://gigimon.github.io/neon-compatibility/53//#testresult/3f3ee437d29c70f2",
        "status" : "passed",
        "time" : {
          "start" : 1639106225897,
          "stop" : 1639106239860,
          "duration" : 13963
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "48ebb24d173348e3.json",
  "parameterValues" : [ ]
}